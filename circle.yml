version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.8
  slack: circleci/slack@1.0.0
jobs:
  build_published:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install NPM Dependencies
          command: if ! test -d node_modules; then npm install; fi
      - run:
          name: Build Static Site
          command: npm run build
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .git
            - public
  build_preview:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install NPM Dependencies
          command: if ! test -d node_modules; then npm install; fi
      - run:
          name: Build Static Site
          command: CONTENTFUL_ACCESS_TOKEN=$CONTENTFUL_PREVIEW_ACCESS_TOKEN npm run build
          environment:
            CONTENTFUL_HOST: preview.contentful.com
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .git
            - public
  build_and_deploy_staging:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install NPM Dependencies
          command: if ! test -d node_modules; then npm install; fi
      - run:
          name: Build Static Site
          command: npm run build
      - run:
          name: Deploy Static Site to Staging
          command: HEROKU_APP_NAME=$HEROKU_APP_NAME_STAGING npm run deploy
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .git
            - public
  deploy_staging:
    docker:
      - image: circleci/python:2.7
    steps:
      - attach_workspace:
          at: .
      - aws-cli/install
      - aws-cli/configure
      - deploy:
          name: Deploy JS, CSS and Assets to S3
          command: |
            aws s3 sync public/ s3://$AWS_BUCKET_STAGING \
            --acl public-read \
            --cache-control public,max-age=31536000,immutable \
            --delete \
            --exclude "*" \
            --include "static/*" \
            --include "*.js" \
            --include "*.css"
      - deploy:
          name: Deploy HTML to S3
          command: |
            aws s3 sync public/ s3://$AWS_BUCKET_STAGING \
            --acl public-read \
            --cache-control public,max-age=0,must-revalidate \
            --delete \
            --exclude "*" \
            --include "*.html"
  push_production_and_preview:
    docker:
      - image: circleci/python:2.7
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Push latest commit to production branch
          command: git push -q https://${GITHUB_PERSONAL_TOKEN}@github.com/madetech/made-blog.git HEAD:production HEAD:preview
  deploy_production:
    docker:
      - image: circleci/python:2.7
    steps:
      - attach_workspace:
          at: .
      - aws-cli/install
      - aws-cli/configure
      - deploy:
          name: Deploy JS, CSS and Assets to S3
          command: |
            aws s3 sync public/ s3://$AWS_BUCKET_PRODUCTION \
            --acl public-read \
            --cache-control public,max-age=31536000,immutable \
            --delete \
            --exclude "*" \
            --include "static/*" \
            --include "*.js" \
            --include "*.css"
      - deploy:
          name: Deploy HTML to S3
          command: |
            aws s3 sync public/ s3://$AWS_BUCKET_PRODUCTION \
            --acl public-read \
            --cache-control public,max-age=0,must-revalidate \
            --delete \
            --exclude "*" \
            --include "*.html"
      - slack/notify:
          color: '#439a63'
          message: https://www.madetech.com has just been deployed.
  deploy_preview:
    docker:
      - image: circleci/python:2.7
    steps:
      - attach_workspace:
          at: .
      - aws-cli/install
      - aws-cli/configure
      - deploy:
          name: Deploy JS, CSS and Assets to S3
          command: |
            aws s3 sync public/ s3://$AWS_BUCKET_PREVIEW \
            --acl public-read \
            --cache-control public,max-age=31536000,immutable \
            --delete \
            --exclude "*" \
            --include "static/*" \
            --include "*.js" \
            --include "*.css"
      - deploy:
          name: Deploy HTML to S3
          command: |
            aws s3 sync public/ s3://$AWS_BUCKET_PREVIEW \
            --acl public-read \
            --cache-control public,max-age=0,must-revalidate \
            --delete \
            --exclude "*" \
            --include "*.html"
workflows:
  version: 2
  master:
    jobs:
      - build_and_deploy_staging:
          filters:
            branches:
              only:
                - master
      - hold:
          type: approval
          requires:
            - build_and_deploy_staging
      - slack/approval-notification:
          message: https://staging.madetech.com is ready for review. Use workflow to deploy to production.
          requires:
            - build_and_deploy_staging
      - push_production_and_preview:
          requires:
            - hold
  production:
    jobs:
      - build_published:
          filters:
            branches:
              only:
                - production
      - deploy_production:
          requires:
          - build_published
  preview:
    jobs:
      - build_preview:
          filters:
            branches:
              only:
                - preview
      - deploy_preview:
          requires:
          - build_preview
