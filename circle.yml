version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.8
jobs:
  build_published:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install NPM Dependencies
          command: if ! test -d node_modules; then npm install; fi
      - run:
          name: Build Static Site
          command: npm run build
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .git
            - public
  build_preview:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install NPM Dependencies
          command: if ! test -d node_modules; then npm install; fi
      - run:
          name: Build Static Site
          command: CONTENTFUL_ACCESS_TOKEN=$CONTENTFUL_PREVIEW_ACCESS_TOKEN npm run build
          environment:
            CONTENTFUL_HOST: preview.contentful.com
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .git
            - public
  deploy_staging:
    docker:
      - image: circleci/python:2.7
    steps:
      - attach_workspace:
          at: .
      - aws-cli/install
      - aws-cli/configure
      - deploy:
          name: Deploy JS, CSS and Assets to S3
          command: |
            aws s3 sync public/ s3://$AWS_BUCKET_STAGING \
            --acl public-read \
            --cache-control public,max-age=31536000,immutable \
            --delete \
            --exclude "*" \
            --include "static/*" \
            --include "*.js" \
            --include "*.css"
      - deploy:
          name: Deploy HTML to S3
          command: |
            aws s3 sync public/ s3://$AWS_BUCKET_STAGING \
            --acl public-read \
            --cache-control public,max-age=0,must-revalidate \
            --delete \
            --exclude "*" \
            --include "*.html"
  push_production:
    docker:
      - image: circleci/python:2.7
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Push latest commit to production branch
          command: git push -q https://${GITHUB_PERSONAL_TOKEN}@github.com/madetech/made-blog.git HEAD:production
  deploy_production:
    docker:
      - image: circleci/python:2.7
    steps:
      - attach_workspace:
          at: .
      - aws-cli/install
      - aws-cli/configure
      - deploy:
          name: Deploy JS, CSS and Assets to S3
          command: |
            aws s3 sync public/ s3://$AWS_BUCKET_PRODUCTION \
            --acl public-read \
            --cache-control public,max-age=31536000,immutable \
            --delete \
            --exclude "*" \
            --include "static/*" \
            --include "*.js" \
            --include "*.css"
      - deploy:
          name: Deploy HTML to S3
          command: |
            aws s3 sync public/ s3://$AWS_BUCKET_PRODUCTION \
            --acl public-read \
            --cache-control public,max-age=0,must-revalidate \
            --delete \
            --exclude "*" \
            --include "*.html"
      - run:
          name: Push latest commit to production branch
          command: git push -q https://${GITHUB_PERSONAL_TOKEN}@github.com/madetech/made-blog.git HEAD:production
workflows:
  version: 2
  master_pipeline:
    jobs:
      - build_published:
          filters:
            branches:
              only:
                - master
      - deploy_staging:
          requires:
            - build_published
      - hold:
          type: approval
          requires:
            - deploy_staging
      - push_production:
          requires:
            - hold
  production:
    jobs:
      - build_published:
          filters:
            branches:
              only:
                - production
      - deploy_production:
          requires:
          - build_published
      - build_preview:
          filters:
            branches:
              only:
                - production
